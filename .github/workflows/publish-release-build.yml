name: Publish Release Build

on:
  release:
    types: [published]

env:
  DEPLOY_USER: "ExtendedXmlSerializer's GitHub Action Automation Agent"
  DEPLOY_EMAIL: "ExtendedXmlSerializer@users.noreply.github.com"
  DEPLOY_COMMIT_MESSAGE: Adding CHANGELOG.md
  DEPLOY_ACCOUNT: ExtendedXmlSerializer
  DEPLOY_SLUG: nextrelease
  DEPLOY_BRANCH: master

jobs:
  generate_and_save:
    runs-on: ubuntu-latest
    steps:
    - id: generate
      name: Generate CHANGELOG
      uses: dragonspark/action-changelog-dawg@master
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload CHANGELOG
      uses: actions/upload-artifact@v1
      with:
        name: store
        path: '${{ steps.generate.outputs.filename }}'

  load_and_push:
    runs-on: ubuntu-latest
    needs: [generate_and_save]    
    steps:
      - uses: actions/checkout@master
        with:
          ref: refs/heads/master
      - name: Download the CHANGELOG
        uses: actions/download-artifact@v1
        with:
          name: store
          path: ./
      - name: Add and Commit
        run: |
             git config user.email $env:DEPLOY_EMAIL
             git config user.name $env:DEPLOY_USER
             git add -A 2>&1
             git commit -m $env:DEPLOY_COMMIT_MESSAGE
        shell: pwsh
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  load_and_push_to_wiki:
    runs-on: ubuntu-latest
    needs: [generate_and_save]    
    steps:
      - uses: actions/checkout@master
        with:
          repository: ${{ github.repository }}.wiki
          ref: refs/heads/master
          path: ./${{ github.event.repository.name }}
      - name: Download the CHANGELOG
        uses: actions/download-artifact@v1
        with:
          name: store
          path: ./
      - name: Add and Commit
        run: |
             git config user.email $env:DEPLOY_EMAIL
             git config user.name $env:DEPLOY_USER
             git add -A 2>&1
             git commit -m $env:DEPLOY_COMMIT_MESSAGE
        shell: pwsh
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: ${{ github.repository }}.wiki
          github_token: ${{ secrets.GITHUB_TOKEN }}
  
  build:
    needs: [load_and_push, load_and_push_to_wiki]
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Apply and Update Build Versioning
      run: |
           $current = [System.Management.Automation.SemanticVersion]"${{ github.event.release.tag_name }}".TrimStart("vV")
           
           $token = ConvertTo-SecureString "${{ secrets.API_APPVEYOR_TOKEN }}" -AsPlainText -Force
           $s = Invoke-RestMethod "https://ci.appveyor.com/api/projects/$env:DEPLOY_ACCOUNT/$env:DEPLOY_SLUG/settings" -Authentication Bearer -Token $token
           $s.settings.versionFormat = "$current.{build}"
           $s.settings.nextBuildNumber = "0"
           Invoke-RestMethod 'https://ci.appveyor.com/api/projects' -Method Put -Authentication Bearer -Token $token -Body ($s.settings | ConvertTo-Json -Depth 10) -ContentType "application/json"
      shell: pwsh
    - name: Initiate Build Process
      run: |
           $headers = @{
             "Authorization" = "Bearer ${{ secrets.API_APPVEYOR_TOKEN }}"
             "Content-type" = "application/json"
           }
           
           $body = @{
             accountName = $env:DEPLOY_ACCOUNT
             projectSlug = $env:DEPLOY_SLUG
             tag = "${{ github.event.release.tag_name }}"
             tagName = "${{ github.event.release.tag_name }}"
             tag_name = "${{ github.event.release.tag_name }}"
             # commitId = "${{ github.event.release.tag_name }}"
             environmentVariables = @{
               APPVEYOR_REPO_COMMIT_AUTHOR = $env:DEPLOY_USER
               APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL = $env:DEPLOY_EMAIL
               APPVEYOR_REPO_TAG = $true
               APPVEYOR_REPO_TAG_NAME = "${{ github.event.release.tag_name }}"
             }
           } | ConvertTo-Json
           
           Invoke-RestMethod 'https://ci.appveyor.com/api/builds' -Method POST -Headers $headers -Body $body
      shell: pwsh
